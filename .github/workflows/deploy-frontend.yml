name: Deploy Taskify Frontend to AWS EC2  

on:
  push:
    branches:
      - main  # Se ejecuta cuando se haga un push a main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: 📥 Clonar el repositorio
      uses: actions/checkout@v3

    - name: 🐳 Iniciar sesión en DockerHub
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      run: |
        if [[ -z "$DOCKER_USERNAME" || -z "$DOCKER_PASSWORD" ]]; then
          echo "❌ ERROR: DOCKERHUB_USERNAME o DOCKERHUB_PASSWORD no están configurados."
          exit 1
        fi
        echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin

    - name: 🛠️ Construir la imagen Docker
      run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/taskify-frontend .

    - name: 📤 Subir la imagen a DockerHub
      run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/taskify-frontend

    - name: 🚀 Conectar a EC2, instalar dependencias y actualizar el contenedor
      uses: appleboy/ssh-action@v0.1.7
      with:
        host: ${{ secrets.AWS_EC2_HOST }}
        username: ${{ secrets.AWS_EC2_USER }}
        key: ${{ secrets.AWS_PRIVATE_KEY }}
        port: 22
        script: |
          echo "✅ Conectado a EC2"
          
          # Instalar Docker si no está instalado
          if ! command -v docker &> /dev/null
          then
            echo "🐳 Instalando Docker..."
            sudo yum update -y
            sudo yum install -y docker
            sudo systemctl start docker
            sudo systemctl enable docker
            sudo usermod -aG docker $USER
          fi

          # Limpiar imágenes antiguas
          echo "🧹 Limpiando imágenes antiguas..."
          docker stop taskify-frontend || true
          docker rm taskify-frontend || true
          docker system prune -af || true

          # Descargar la última imagen
          echo "📥 Descargando la última imagen de DockerHub..."
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/taskify-frontend

          # Ejecutar el contenedor
          echo "🚀 Ejecutando Taskify Frontend..."
          docker run -d -p 80:80 --name taskify-frontend ${{ secrets.DOCKERHUB_USERNAME }}/taskify-frontend

          # Verificar si el contenedor está corriendo
          docker ps | grep taskify-frontend || (echo "❌ ERROR: El contenedor no se inició correctamente." && exit 1)

          echo "✅ Despliegue completado exitosamente."
