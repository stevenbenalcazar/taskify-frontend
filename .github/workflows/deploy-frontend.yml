name: Deploy Taskify Frontend to AWS EC2  

on:
  push:
    branches:
      - main  # Se ejecuta cuando se haga un push a main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: üì• Clonar el repositorio
      uses: actions/checkout@v3

    - name: üê≥ Iniciar sesi√≥n en DockerHub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: üõ†Ô∏è Construir la imagen Docker
      run: docker build -t ${{ secrets.DOCKER_USERNAME }}/taskify-frontend .

    - name: üì§ Subir la imagen a DockerHub
      run: docker push ${{ secrets.DOCKER_USERNAME }}/taskify-frontend

    - name: üöÄ Conectar a EC2 y actualizar el contenedor
      uses: fifsky/ssh-action@master
      with:
        host: ${{ secrets.AWS_EC2_HOST }}
        user: ${{ secrets.AWS_EC2_USER }}
        key: ${{ secrets.AWS_PRIVATE_KEY }}
        port: 22
        command: |
          # **1Ô∏è‚É£ Eliminar contenedor anterior si existe**
          docker stop taskify-frontend || true
          docker rm taskify-frontend || true

          # **2Ô∏è‚É£ Descargar la √∫ltima imagen desde DockerHub**
          docker pull ${{ secrets.DOCKER_USERNAME }}/taskify-frontend

          # **3Ô∏è‚É£ Ejecutar el nuevo contenedor con las variables de entorno**
          docker run -d -p 80:80 \
            -e LOGIN_SERVICE_URL=${{ secrets.LOGIN_SERVICE_URL }} \
            -e USER_SERVICE_URL=${{ secrets.USER_SERVICE_URL }} \
            --name taskify-frontend ${{ secrets.DOCKER_USERNAME }}/taskify-frontend
            